services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: funraise-mysql-prod
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    # Do not expose MySQL port outside in production
    expose:
      - "3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./mysql-prod.cnf:/etc/mysql/conf.d/mysql.cnf:ro
    networks:
      - funraise-network-prod
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 30s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: funraise-app-prod
    restart: always
    ports:
      - "${FUNRAISE_APP_PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      FUNRAISE_APP_URL: ${FUNRAISE_APP_URL}
      FUNRAISE_APP_PORT: 3000
      
      # Database
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      
      # Discord OAuth
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      DISCORD_REDIRECT_URI: ${DISCORD_REDIRECT_URI}
      
      # JWT Secrets
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      
      # Email Service
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      
      # Firebase
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
      FIREBASE_APP_ID: ${FIREBASE_APP_ID}
      FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - funraise-network-prod
    volumes:
      - app_logs:/usr/src/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
    # Security
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /usr/src/app/logs

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: funraise-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - funraise-network-prod
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

networks:
  funraise-network-prod:
    driver: bridge
    internal: false

volumes:
  mysql_data_prod:
    driver: local
  app_logs:
    driver: local 