services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: funraise-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-funraise_root_123}
      MYSQL_DATABASE: ${DB_NAME:-funraise}
      MYSQL_USER: ${DB_USER:-funraise_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-funraise123}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - funraise-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: funraise-app
    restart: unless-stopped
    ports:
      - "${FUNRAISE_APP_PORT:-3000}:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      FUNRAISE_APP_URL: ${FUNRAISE_APP_URL:-http://localhost:3000}
      FUNRAISE_APP_PORT: 3000
      
      # Database
      DB_NAME: ${DB_NAME:-funraise}
      DB_USER: ${DB_USER:-funraise_user}
      DB_PASSWORD: ${DB_PASSWORD:-funraise123}
      DB_HOST: db
      
      # Discord OAuth
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      
      # JWT Secrets
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      
      # Email Service
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      
      # Firebase
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
      FIREBASE_APP_ID: ${FIREBASE_APP_ID}
      FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - funraise-network
    volumes:
      - ./logs:/usr/src/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  funraise-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local 